--
-- Libraries
--

local http = require "http"
local shortport = require "shortport"
local stdnse = require "stdnse"
local vulns = require "vulns"

--
-- Description
--

description = [[
Stack based buffer overflow in SonicWall SMA100 httpd server (CVE-2021-20038)

The presence of the vulnerability is determined with the following:
    - Trying to request the /cgi-bin/welcome page of the webserver
    - Checking the server header to determine if the server is an SMA100
    - Extracting the name of the javascript file which is sourced
    - Checking the version number included in the name of the js file

This script is not intrusive because:
    - It only performs a simple GET request to the web server.
    - No data or payload is included with the request just the URI.

This check may have False Positives if:
    - Patches are back ported but the version number is not updated

This check may have False negatives if:
    - The server header does not match what is expected
    - The welcome page on the webserver cannot be accessed

How to use:
    nmap --script ./cve-2021-20038.nse [target]

References:
* https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0026
* https://attackerkb.com/topics/QyXRC1wbvC/cve-2021-20038/rapid7-analysis
* https://github.com/jbaines-r7/badblood/
]]

--
-- Author
--
author = "S3ntinelX"

--
-- License
--
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"

--
-- Categories
--
categories = {"safe", "vuln"}

portrule = shortport.http

local function check_version(resp_body)
    -- Extract version information from js file name
    major, minor, revision, build, point = resp_body:match("(%d+)%.(%d+)%.(%d+)%.(%d+)%-(%d+)sv%.js")

    -- Convert each part to numbers
    major = tonumber(major)
    minor = tonumber(minor)
    revision = tonumber(revision)
    build = tonumber(build)
    point = tonumber(point)

    -- Appears to only affect versions: 10.2.*
    if (major ~= 10 and minor ~= 2) then
        return false
    end

    -- Identify if the version is vulnerable
    -- It may be possible to simplify this as it appears only 10.2.1.3 is patched
    if (revision == 0) then
        return true
    elseif (revision == 1) then
        if (build == 0) then
            return point <= 17
        elseif (build == 1) then
            return point <= 19
        elseif (build == 2) then
            return point <= 24
        end
    end
    return false
end


action = function(host, port)
    -- Specify vuln information
    local vuln = {
        title = "Stack based buffer overflow in SonicWall SMA100 httpd server.",
        IDS = {CVE = "CVE-2021-20038"},
        risk_factor = "High",
        scores = {
            CVSSv3 = "9.8 (CRITICAL) (AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)",
        },
        description = [[
On December 7, 2021, SonicWall released new firmware for their Secure Mobile Access (SMA) 100 series.
SonicWall issued a security advisory on January 11, 2022 notifying users that the December releases
fixed security issues found by Rapid7. The most critical issue, an unauthenticated stack-based buffer
overflow in the web interface, allows remote attackers to execute arbitrary code as the nobody user.
The vulnerability was assigned CVE-2021-20038 and has a CVSS score of 9.8.
        ]],
        references = {
            "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0026",
            "https://attackerkb.com/topics/QyXRC1wbvC/cve-2021-20038/rapid7-analysis",
        },
        dates = {
            disclosure = {year = "2021", month = "12", day = "08"},
        },
    }

    -- Request the page from the site
    response = http.get(host, port, "/cgi-bin/welcome")
    if not (response and response.status) then
        stdnse.debug1("Could not connect to server")
        return nil
    end

    -- Check if the server is a SonicWALL VPN
    if (response.header["server"] ~= "SonicWALL SSL-VPN Web Server") then
        return nil
    end

    -- Build the report template
    local report = vulns.Report:new(SCRIPT_NAME, host, port)

    -- Check the version number
    if (check_version(response.body)) then
        vuln.state = vulns.STATE.LIKELY_VULN
    else
        vuln.state = vulns.STATE.NOT_VULN
    end

    return report:make_output(vuln)
end